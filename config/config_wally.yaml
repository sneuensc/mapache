SAMPLES: samples.txt
GENOME: 
    hg19: /db/local/amalaspi/reference_human/hs.build37.1/hs.build37.1.fa 

#email: samuel.neuenschwander@unil.ch

delim: '\s+'
#delim: ' '
#delim: "\t"

## global variables to define about resource increments after job failure
## 0: no change between failures
## 1: doubling after each failure
memory_increment_ratio: 1
runtime_increment_ratio: 0

## indexing
indexing_mem: 16
indexing_threads: 1
indexing_time: 2


##############
## FASTQ level

# adapter_removal (optional)
run_adapter_removal: True
adaptrem_params: '--minlength 30'
adaptrem_threads: 4 
adaptrem_mem: 4 ## in GB
adaptrem_time: 2

## mapping (bwa_aln, bwa_mem, bowtie2)
mapper: 'bwa_aln'
bwa_aln_params: '-l 1024'
bwa_samse_params: '-n 3'
bwa_mem_params: ''
bowtie2_params: ''
mapping_threads: 8
mapping_mem: 16
mapping_time: 2


## samtools_sort
sort_threads: 4
sort_mem: 16
sort_time: 2


## samtools_filter
filter_threads: 4
filter_mem: 2
filter_time: 2

##################
## library level

## merge_bam_fastq2library
## merge_bam_library2sample
merge_threads: 2
merge_mem: 8
merge_time: 2

## remove_duplicates (optional)
run_remove_duplicates: True
rmdup_params: 'REMOVE_DUPLICATES=true'
rmdup_threads: 4
rmdup_mem: 16
rmdup_time: 2


## extract_duplicates (optional)
## in this case parameter 'rmdup_params' has NOT to be set to 'REMOVE_DUPLICATES=true'
run_extract_duplicates: False
extract_duplicates_threads: 4
extract_duplicates_mem: 16
extract_duplicates_time: 2


## mapDamage (optional, by default not run: see below)
run_mapDamage_rescale: False
mapDamage_params: ''
mapDamage_time: 2
mapDamage_threads: 1 ## hardcoded at 1
mapDamage_mem: 8


##################
## sample level

## realign and samtools_index (optional)
run_realign: True
realign_threads: 4
realign_mem: 16
realign_time: 4

## samtools_calmd (optional)
run_compute_md: True
calmd_threads: 4
calmd_mem: 4
calmd_time: 2


##################
## stats on the final bam file
run_depth: True

## mds
run_bammds: False

## deamination (has to be added to the library and final bam file)
run_damage: 'bamdamage'        #("False", "mapDamage", "bamdamage")
bamdamage_fraction: 5000
